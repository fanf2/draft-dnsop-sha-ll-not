



DNS Operations                                                  T. Finch
Internet-Draft                                   University of Cambridge
Updates: 8624 (if approved)                            February 27, 2020
Intended status: Standards Track
Expires: August 30, 2020


    Hardening DNSSEC against collision weaknesses in SHA-1 and other
                     cryptographic hash algorithms
                      draft-fanf-dnsop-sha-ll-not

Abstract

   DNSSEC deployments have often used the SHA-1 cryptographic hash
   algorithm to provide authentication of DNS data.  This document
   explains why SHA-1 is no longer secure for this purpose, and
   deprecates its use in DNSSEC signatures.  This document updates RFC
   8624.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 30, 2020.

Copyright Notice

   Copyright (c) 2020 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.

Table of Contents

   1.  Introduction
     1.1.  Terminology
   2.  Deprecating SHA-1 in DNSSEC
     2.1.  DNSSEC signing software
     2.2.  DNS hosting services
     2.3.  DNSSEC validating software
     2.4.  DNS resolver services
   3.  Collision attacks against DNSSEC
   4.  Collision attacks and RRSIG records
   5.  Collision attacks and other DNS record types
   6.  Other uses of SHA-1 in the DNS
     6.1.  DS and CDS records
     6.2.  NSEC3 records
     6.3.  SSHFP records
     6.4.  TSIG authentication
   7.  Security considerations
     7.1.  Staying secure
     7.2.  When to declare SHA-1 insecure
     7.3.  Avoiding unwanted insecurity
   8.  IANA considerations
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Appendix A.  Acknowledgments
   Appendix B.  Timeline
   Author's Address

1.  Introduction

   Since 2005, SHA-1 has been known to be much weaker than it was
   designed to be.  Over the last 5 years there has been a series of
   increasingly powerful demonstrations that SHA-1's weaknesses can be
   exploited in practice.  In January 2020, Gaetan Leurent and Thomas
   Peyrin announced a chosen-prefix collision for SHA-1 [SHA-mbles].
   This was the first practical break of SHA-1 as used in cryptographic
   signatures.

   DNSSEC uses cryptographic signatures to authenticate DNS data.  Its
   signature algorithms [DNSKEY-IANA] include RSASHA1 (5) and
   RSASHA1-NSEC3-SHA1 (7) which are vulnerable to chosen-prefix
   collisions in SHA-1, as described in Section 3.  This document
   deprecates these vulnerable algorithms (Section 2).

   SHA-1 has been deprecated in other situations for several years (see
   Appendix B).  This document's timetable for deprecating SHA-1 in
   DNSSEC (Section 2) is based on those examples, adapted for the
   particulars of the DNS.  Section 7 discusses the trade-offs between
   speed and security.

   A collision attack can be used against DNSSEC in a number of ways,
   some of which are explored in Section 5.  Certain weaknesses in the
   way DNSSEC is sometimes deployed can make collision attacks easier to
   carry out, or make their consequences more severe.  Although the only
   sure way to protect against collision attacks is to use a secure
   algorithm (Section 2), Section 4 and Section 5 outline some partial
   mitigations.

   The DNS uses SHA-1 for a number of other less vulnerable purposes, as
   outlined in section Section 6.

1.1.  Terminology

   The key words MUST, MUST NOT, REQUIRED, SHALL, SHALL NOT, SHOULD,
   SHOULD NOT, RECOMMENDED, MAY, and OPTIONAL in this document are to be
   interpreted as described in [RFC2119].

2.  Deprecating SHA-1 in DNSSEC

   The following table lists the implementation recommendations for
   DNSKEY algorithms [DNSKEY-IANA].  The change from [RFC8624] section
   3.1 is to deprecate algorithms 5 and 7.

   +-----+--------------------+-----------------+---------------------+
   | No. | Mnemonic           | DNSSEC Signing  | DNSSEC Validation   |
   +-----+--------------------+-----------------+---------------------+
   | 1   | RSAMD5             | MUST NOT        | MUST NOT            |
   | 3   | DSA                | MUST NOT        | MUST NOT            |
   | 5   | RSASHA1            | MUST NOT        | MUST NOT after 2021 |
   | 6   | DSA-NSEC3-SHA1     | MUST NOT        | MUST NOT            |
   | 7   | RSASHA1-NSEC3-SHA1 | MUST NOT        | MUST NOT after 2021 |
   | 8   | RSASHA256          | MUST            | MUST                |
   | 10  | RSASHA512          | NOT RECOMMENDED | MUST                |
   | 12  | ECC-GOST           | MUST NOT        | MAY                 |
   | 13  | ECDSAP256SHA256    | MUST            | MUST                |
   | 14  | ECDSAP384SHA384    | MAY             | RECOMMENDED         |
   | 15  | ED25519            | RECOMMENDED     | RECOMMENDED         |
   | 16  | ED448              | MAY             | RECOMMENDED         |
   +-----+--------------------+-----------------+---------------------+

   The following subsections have recommended timelines for deprecating
   algorithms 5 and 7 in specific situations.

2.1.  DNSSEC signing software

   DNSSEC key management and zone signing software MUST remove support
   for algorithms 5 and 7 in their next feature release.

2.2.  DNS hosting services

   Authoritative DNS hosting services that include DNSSEC signing as
   part of the service SHOULD NOT generate a new key with algorithms 5
   or 7 for a zone that does not already have a key with the same
   algorithm.  They MUST NOT do so after the end of 2020.

   Zones signed with algorithms 5 or 7 SHOULD be rolled over to a
   mandatory or recommended algorithm as soon as possible.  The
   rollovers MUST be complete before the end of 2021.

2.3.  DNSSEC validating software

   Validating resolvers SHOULD have a build-time or run-time option to
   disable selected DNSKEY algorithms, that is, to treat them as unknown
   or insecure.

   Algorithms 5 and 7 MUST be disabled in 2022 at the latest.  If SHA-1
   becomes significantly weaker before then, Algorithms 5 and 7 MUST be
   disabled in a security patch release.

2.4.  DNS resolver services

   Validating resolvers MUST treat algorithms 5 and 7 as unknown or
   insecure after the start of 2022, or earlier if SHA-1 becomes
   significantly weaker before then.

3.  Collision attacks against DNSSEC

4.  Collision attacks and RRSIG records

5.  Collision attacks and other DNS record types

6.  Other uses of SHA-1 in the DNS

6.1.  DS and CDS records

   A DS or CDS record securely identifies a DNSKEY record using a
   cryptographic digest ([RFC4034] section 5).  One of the digest types
   is SHA-1.  It is deprecated by [RFC8624].

   For this purpose, the digest needs preimage security, which SHA-1
   still has, and collision attacks do not affect it.

6.2.  NSEC3 records

   NSEC3 is an alternative mechanism for authenticated denial of
   existence in DNSSEC.  It is based on SHA-1 hashes of domain names.
   The NSEC3 specification [RFC5155] discusses collisions in some
   detail.

   NSEC3 can be attacked with an identical-prefix collision, which is
   simpler than the chosen-prefix collisions that are the main subject
   of this document.  The best collision known at the time of writing
   [SHAttered] uses two SHA-1 input blocks (128 bytes) so a collision
   could in principle be made to fit into a domain name for an attack on
   NSEC3.  However it will be difficult to make the colliding domain
   names conform to host name syntax, and the attack will be futile
   because the signer can defeat it by changing its NSEC3 salt
   ([RFC5155] section C.2.1).

6.3.  SSHFP records

   An SSHFP record securely identifies an SSH server public key using a
   cryptographic digest [RFC4255].  Although SSHFP SHA-1 digests have
   not yet been deprecated, SHA-256 is preferred [RFC6594].

   For SSHFP records the digest needs preimage security, which SHA-1
   still has, and collision attacks do not affect it.

6.4.  TSIG authentication

   TSIG is a DNS extension for secret-key transaction authentication
   [I-D.ietf-dnsop-rfc2845bis].  Its "hmac-sha1" algorithm is
   deprecated.  Collision attacks do not affect HMAC SHA-1.

7.  Security considerations

   We find ourselves in an awkward and embarrassing situation.  As
   Appendix B shows, there has been plenty of warning about the weakness
   of SHA-1.  Other parts of the industry started making efforts to
   deprecate it years ago.  But DNSSEC has been complacent.

   At the time of writing, there are 1516 top-level domains, of which
   1102 use secure DNSSEC algorithms, 274 use algorithms 5 or 7 (RSA
   SHA-1), and 140 are insecure.  In the reverse DNS, 3 RIRs use secure
   DNSSEC algorithms, 2 RIRs use algorithm 5, and many of the non-RIR
   legacy delegations are insecure.

7.1.  Staying secure

   There are still many domains that depend on SHA-1 to secure
   applications that use DNSSEC, such as issuing TLS certificates
   [RFC6844] [RFC8555], sending inter-domain email [RFC7672], and
   authenticating SSH servers [RFC4255].

   Some applications use the "authenticated data" (AD bit) signal from
   DNSSEC to make security decisions, and will fail if it unexpectedly
   switches off.  Other applications use DNSSEC passively and will
   silently go insecure.  In either case we would prefer them to
   continue working as if secure, as long as SHA-1 is still
   significantly better than insecure DNS.

7.2.  When to declare SHA-1 insecure

   At the time of writing, a SHA-1 chosen-prefix collision costs less
   than US$100,000 in computer time, takes about a month, and requires
   the attention of expert cryptanalysts.  Attacks seem to be getting
   better by a factor of 3 or 4 per year.

   There is not much time before collisions become affordable, and
   possible for non-experts to calculate.  Section 2 hopes this will not
   happen within the next 2 years.

   This 2 year guess is likely to be too optimistic, so DNSSEC
   validators need to be prepared to disable support for SHA-1 by
   configuration change or security patch as soon as a significantly
   improved attack on SHA-1 is announced.

7.3.  Avoiding unwanted insecurity

   The reason for not deprecating SHA-1 immediately is to allow time to
   perform algorithm rollovers, so that zones will continue to be
   secure.

   Abruptly forcing SHA-1 zones to be treated as insecure may encourage
   their operators to leave them insecure, instead of encouraging them
   to upgrade to a secure algorithm.

8.  IANA considerations

   This document has no IANA actions.

9.  References

9.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

   [RFC4034]  Arends, R., Austein, R., Larson, M., Massey, D., and S.
              Rose, "Resource Records for the DNS Security Extensions",
              RFC 4034, DOI 10.17487/RFC4034, March 2005,
              <https://www.rfc-editor.org/info/rfc4034>.

   [RFC8624]  Wouters, P. and O. Sury, "Algorithm Implementation
              Requirements and Usage Guidance for DNSSEC", RFC 8624,
              DOI 10.17487/RFC8624, June 2019, <https://www.rfc-
              editor.org/info/rfc8624>.

9.2.  Informative References

   [CABforum2014]
              CA/Browser Forum, "Ballot 118 - SHA-1 Sunset", October
              2014, <https://cabforum.org/2014/10/16/ballot-118-sha-
              1-sunset/>.

   [Cochran2007]
              Cochran, M., "Notes on the Wang et al. 2^63 SHA-1
              Differential Path", 2007,
              <https://eprint.iacr.org/2007/474>.

   [DNSKEY-IANA]
              IANA, "Domain Name System Security (DNSSEC) Algorithm
              Numbers", 2017,
              <http://www.iana.org/assignments/dns-sec-alg-numbers>.

   [I-D.ietf-dnsop-rfc2845bis]
              Dupont, F., Morris, S., Vixie, P., Eastlake, D.,
              Gudmundsson, O., and B. Wellington, "Secret Key
              Transaction Authentication for DNS (TSIG)", draft-ietf-
              dnsop-rfc2845bis-07 (work in progress), February 2020.

   [NIST-SP800-131A]
              National Institute of Standards and Technology,
              "Recommendation for Transitioning the Use of
              CryptographicAlgorithms and Key Lengths", January 2011,
              <https://nvlpubs.nist.gov/nistpubs/Legacy/SP/
              nistspecialpublication800-131a.pdf>.

   [NIST2006]
              National Institute of Standards and Technology, "NIST
              Comments on Cryptanalytic Attacks on SHA-1", 2006,
              <https://csrc.nist.gov/News/2006/NIST-Comments-on-
              Cryptanalytic-Attacks-on-SHA-1>.

   [RFC4255]  Schlyter, J. and W. Griffin, "Using DNS to Securely
              Publish Secure Shell (SSH) Key Fingerprints", RFC 4255,
              DOI 10.17487/RFC4255, January 2006, <https://www.rfc-
              editor.org/info/rfc4255>.

   [RFC5155]  Laurie, B., Sisson, G., Arends, R., and D. Blacka, "DNS
              Security (DNSSEC) Hashed Authenticated Denial of
              Existence", RFC 5155, DOI 10.17487/RFC5155, March 2008,
              <https://www.rfc-editor.org/info/rfc5155>.

   [RFC6594]  Sury, O., "Use of the SHA-256 Algorithm with RSA, Digital
              Signature Algorithm (DSA), and Elliptic Curve DSA (ECDSA)
              in SSHFP Resource Records", RFC 6594,
              DOI 10.17487/RFC6594, April 2012, <https://www.rfc-
              editor.org/info/rfc6594>.

   [RFC6844]  Hallam-Baker, P. and R. Stradling, "DNS Certification
              Authority Authorization (CAA) Resource Record", RFC 6844,
              DOI 10.17487/RFC6844, January 2013, <https://www.rfc-
              editor.org/info/rfc6844>.

   [RFC6944]  Rose, S., "Applicability Statement: DNS Security (DNSSEC)
              DNSKEY Algorithm Implementation Status", RFC 6944,
              DOI 10.17487/RFC6944, April 2013, <https://www.rfc-
              editor.org/info/rfc6944>.

   [RFC7672]  Dukhovni, V. and W. Hardaker, "SMTP Security via
              Opportunistic DNS-Based Authentication of Named Entities
              (DANE) Transport Layer Security (TLS)", RFC 7672,
              DOI 10.17487/RFC7672, October 2015, <https://www.rfc-
              editor.org/info/rfc7672>.

   [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.
              Kasten, "Automatic Certificate Management Environment
              (ACME)", RFC 8555, DOI 10.17487/RFC8555, March 2019,
              <https://www.rfc-editor.org/info/rfc8555>.

   [ROOT-DNSSEC]
              Internet Corporation For Assigned Names and Numbers and
              VeriSign, Inc., "Information about DNSSEC for the Root
              Zone", 2010, <https://www.root-dnssec.org/>.

   [SHA-mbles]
              Leurent, G. and T. Peyrin, "SHA-1 is a Shambles: First
              Chosen-Prefix Collision on SHA-1 and Application to the
              PGP Web of Trust", January 2020, <https://sha-
              mbles.github.io/>.

   [SHAppening]
              Stevens, M., Karpman, P., and T. Peyrin, "Freestart
              collision for full SHA-1", October 2015,
              <https://sites.google.com/site/itstheshappening/>.

   [SHAttered]
              Stevens, M., Bursztein, E., Karpman, P., Albertini, A.,
              and Y. Markov, "The first collision for full SHA-1",
              February 2017, <https://shattered.io/>.

   [Wang2005]
              Wang, X., Yin, Y., and H. Yu, "Finding Collisions in the
              Full SHA-1", 2005, <https://link.springer.com/
              chapter/10.1007/11535218_2>.

Appendix A.  Acknowledgments

   Thanks to Viktor Dukhovni for helpful discussions about the
   implications of the SHA-1 chosen-prefix collision.

Appendix B.  Timeline

   o  2005: Theoretical 2^63 attack on SHA-1 [Wang2005] [Cochran2007]

   o  2006: NIST starts to deprecate SHA-1 [NIST2006]

   o  2010: DNS root zone signed with RSASHA256 [ROOT-DNSSEC]

   o  2011: NIST formally deprecates SHA-1 for digital signatures, and
      disallows it after 2013 [NIST-SP800-131A] (section 3)

   o  2013: IETF recommends RSASHA1 for use in DNSSEC [RFC6944]

   o  2014: CA/Browser forum sunsets SHA-1 in X.509 WebPKI certificates
      after 2015 [CABforum2014]

   o  2015: Free-start collision demonstrated in SHA-1 [SHAppening]

   o  2017: Identical-prefix collision demonstrated in SHA-1 [SHAttered]

   o  2019: IETF partially deprecates SHA-1 for use in DNSSEC [RFC8624]

   o  2020: Chosen-prefix collision demonstrated in SHA-1 [SHA-mbles]

Author's Address

   Tony Finch
   University of Cambridge
   University Information Services
   Roger Needham Building
   7 JJ Thomson Avenue
   Cambridge  CB3 0RB
   England

   Email: dot@dotat.at

